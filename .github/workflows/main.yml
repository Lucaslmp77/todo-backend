name: CI/CD Backend

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure gcloud and Install kubectl
        run: |
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud config set compute/zone ${{ secrets.GKE_ZONE }}
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GKE_ZONE }}
          sudo apt-get update -y
          sudo apt-get install -y kubectl
          gcloud components install kubectl

      - name: Build and Push Docker Image to Artifact Registry
        run: |
          # Define a versão da imagem (usando os 7 primeiros caracteres do hash do commit)
          VERSION=$(echo "$GITHUB_SHA" | cut -c1-7)
          
          # Define o nome da imagem no Artifact Registry
          IMAGE_NAME="us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/backend-repo/backend:${VERSION}"
          
          # Autentica com o Artifact Registry (usando gcloud)
          gcloud auth configure-docker us-central1-docker.pkg.dev
          
          # Constrói e envia a imagem
          docker build -t "${IMAGE_NAME}" .
          docker push "${IMAGE_NAME}"

      - name: Deploy to Kubernetes
        run: |
          NAMESPACE=production # Ou 'approval'
          DEPLOYMENT_FILE=k8s/backend-deployment.yaml  # Arquivo de deployment do backend
          SERVICE_FILE=k8s/backend-service.yaml # Arquivo de service do backend
          
          # Substitui o placeholder da imagem no arquivo de deployment
          sed -i "s|IMAGE_PLACEHOLDER|${IMAGE_NAME}|g" "${DEPLOYMENT_FILE}"
          
          # Aplica as configurações no Kubernetes
          kubectl apply -f "${DEPLOYMENT_FILE}" -n "${NAMESPACE}"
          kubectl apply -f "${SERVICE_FILE}" -n "${NAMESPACE}"
